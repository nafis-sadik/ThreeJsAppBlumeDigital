let modelURL1="../WebRenderer/assets/armchair/scene.gltf";import*as THREE from"../lib/threejs/build/three.module.js";import{GLTFLoader}from"../lib/threejs/examples/jsm/loaders/GLTFLoader.js";import{EffectComposer}from"../lib/threejs/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass}from"../lib/threejs/examples/jsm/postprocessing/RenderPass.js";import{SMAAPass}from"../lib/threejs/examples/jsm/postprocessing/SMAAPass.js";import{OrbitControls}from"../lib/threejs/examples/jsm/controls/OrbitControls.js";import{UnrealBloomPass}from"../lib/threejs/examples/jsm/postprocessing/UnrealBloomPass.js";const RendererConfig={Width:window.innerWidth,Height:window.innerHeight,AspectRatio:window.innerWidth/window.innerHeight,FieldOfView:45,NearPane:1,FarPane:1e4},WebRenderer3={MainCamera:new THREE.PerspectiveCamera(RendererConfig.FieldOfView,RendererConfig.AspectRatio,RendererConfig.NearPane,RendererConfig.FarPane),MainScene:new THREE.Scene,gltfLoader:new GLTFLoader,Renderer:new THREE.WebGLRenderer({antialias:!0})},Composer=new EffectComposer(WebRenderer3.Renderer);let ConfigureRenderer=function(){RendererConfig.Width=window.innerWidth,RendererConfig.Height=window.innerHeight,RendererConfig.AspectRatio=window.innerWidth/window.innerHeight,WebRenderer3.Renderer.setSize(RendererConfig.Width,RendererConfig.Height),Composer.setSize(RendererConfig.Width,RendererConfig.Height),WebRenderer3.MainCamera.aspect=WebRenderer3.Renderer.getPixelRatio();let e=new RenderPass(WebRenderer3.MainScene,WebRenderer3.MainCamera);Composer.addPass(e);let n=new UnrealBloomPass(new THREE.Vector2(RendererConfig.Width,RendererConfig.Height));n.exposure=1.2,n.threshold=0,n.strength=.25,n.radius=1,Composer.addPass(n);let r=new SMAAPass(RendererConfig.Width*RendererConfig.AspectRatio,RendererConfig.Height*RendererConfig.AspectRatio);Composer.addPass(r)};window.addEventListener("resize",function(){ConfigureRenderer(),WebRenderer3.MainCamera.updateProjectionMatrix()},!1);const clock=new THREE.Clock;let box=function(e,n,r,o){let i=new THREE.BoxGeometry(e,n,r);void 0===o&&(o=new THREE.MeshBasicMaterial({color:16777215,wireframe:!1,side:THREE.BackSide}));let t=new THREE.Mesh(i,o);return WebRenderer3.MainScene.add(t),t},skyBox=function(e,n,r,o,i,t){let a=[new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(e),side:THREE.BackSide}),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(n),side:THREE.BackSide}),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(r),side:THREE.BackSide}),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(o),side:THREE.BackSide}),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(t),side:THREE.BackSide}),new THREE.MeshBasicMaterial({map:(new THREE.TextureLoader).load(i),side:THREE.BackSide})],d=new box(5e3,5e3,5e3,a);return WebRenderer3.MainScene.add(d),d};const OrbitController=new OrbitControls(WebRenderer3.MainCamera,WebRenderer3.Renderer.domElement);let ConfigureOrbitController=function(){OrbitController.minDistance=100,OrbitController.maxDistance=1e3,OrbitController.autoRotate=!0,OrbitController.enablePan=!1,OrbitController.enableDamping=!0},ModelLoader_GLTF=function(e,n,r,o,i,t){WebRenderer3.gltfLoader.load(e,function(e){let a=e.scene;if(a.name=n,a.scale.set(r.x,r.y,r.z),a.position.x=o.x,a.position.y=o.y,a.position.z=o.z,a.rotation.set(i.x,i.y,i.z),WebRenderer3.MainScene.add(a),null!=t)return t.add(a),console.log(a),a},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error occured"),console.log(e)})},AddLight=function(e,n="#c1582d",r=!0,o){let i;switch(e){case"DirectionalLight":(i=new THREE.DirectionalLight(n,1)).castShadow=r,i.name=o,WebRenderer3.MainScene.add(i);break;case"AmbientLight":(i=new THREE.AmbientLight(n,1)).name=o,WebRenderer3.MainScene.add(i);break;case"PointLight":(i=new THREE.PointLight(n,1)).castShadow=r,i.name=o,WebRenderer3.MainScene.add(i)}return i},init=function(){THREE.Cache.enabled=!0,WebRenderer3.Renderer.shadowMap.enabled=!0,ConfigureOrbitController(),ConfigureRenderer(),WebRenderer3.MainScene.add(WebRenderer3.MainCamera),document.getElementById("Viewport").append(WebRenderer3.Renderer.domElement),start(),GameLoop(),document.getElementById('loadingScreen').style.display='none';},GameLoop=function(){update(),Composer.render(),requestAnimationFrame(GameLoop)},start=function(){skyBox("../WebRenderer/assets/SkyBox/front.png","../WebRenderer/assets/SkyBox/back.png","../WebRenderer/assets/SkyBox/up.png","../WebRenderer/assets/SkyBox/down.png","../WebRenderer/assets/SkyBox/left.png","../WebRenderer/assets/SkyBox/right.png"),AddLight("DirectionalLight","#aac0c0",!0,"Sun").position.set(25,90,25),AddLight("PointLight","#abbdc1",!0,"PointLight2").position.set(500,300,0),AddLight("PointLight","#708dc1",!0,"PointLight4 ").position.set(-500,300,500),AddLight("PointLight","#708dc1",!0,"PointLight4 ").position.set(0,300,0);let e=ModelLoader_GLTF(modelURL1,"model1",new THREE.Vector3(.1,.1,.1),new THREE.Vector3(0,-50,0),new THREE.Vector3(0,0,0));WebRenderer3.Renderer.setClearColor(),WebRenderer3.Renderer.gammaOutput=!0,WebRenderer3.MainCamera.position.z=250,WebRenderer3.MainCamera.position.y=0,console.log(e)},update=function(){OrbitController.update()};init();