import{Clock,LinearFilter,Mesh,OrthographicCamera,PlaneBufferGeometry,RGBAFormat,Vector2,WebGLRenderTarget}from"../../../build/three.module.js";import{CopyShader}from"../shaders/CopyShader.js";import{ShaderPass}from"../postprocessing/ShaderPass.js";import{MaskPass}from"../postprocessing/MaskPass.js";import{ClearMaskPass}from"../postprocessing/MaskPass.js";var EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var s={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat,stencilBuffer:!1},i=e.getSize(new Vector2);this._pixelRatio=e.getPixelRatio(),this._width=i.width,this._height=i.height,(t=new WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,s)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===CopyShader&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===ShaderPass&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new ShaderPass(CopyShader),this.clock=new Clock};Object.assign(EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());var t,s,i=this.renderer.getRenderTarget(),r=!1,h=this.passes.length;for(s=0;s<h;s++)if(!1!==(t=this.passes[s]).enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var a=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==MaskPass&&(t instanceof MaskPass?r=!0:t instanceof ClearMaskPass&&(r=!1))}this.renderer.setRenderTarget(i)},reset:function(e){if(void 0===e){var t=this.renderer.getSize(new Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var s=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(s,i),this.renderTarget2.setSize(s,i);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(s,i)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};Object.assign(Pass.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),Pass.FullScreenQuad=function(){var e=new OrthographicCamera(-1,1,1,-1,0,1),t=new PlaneBufferGeometry(2,2),s=function(e){this._mesh=new Mesh(t,e)};return Object.defineProperty(s.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(s.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),s}();export{EffectComposer,Pass};